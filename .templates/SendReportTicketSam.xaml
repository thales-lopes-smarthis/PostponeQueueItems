<Activity mc:Ignorable="sap sap2010" x:Class="SendReportTicketSam" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:si="clr-namespace:System.IO;assembly=System.Private.CoreLib" xmlns:ss="clr-namespace:System.Security;assembly=System.Private.CoreLib" xmlns:st="clr-namespace:System.Text;assembly=System.Private.CoreLib" xmlns:uascw="clr-namespace:UiPath.Activities.System.Compression.Workflow;assembly=UiPath.System.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_ticketPriority" Type="InArgument(x:String)" />
    <x:Property Name="in_ticketStatus" Type="InArgument(x:String)" />
    <x:Property Name="in_ticketDescription" Type="InArgument(x:String)" />
    <x:Property Name="in_attachmentsPaths" Type="InArgument(x:String)" />
    <x:Property Name="in_ticketResponderId" Type="InArgument(x:String)" />
    <x:Property Name="in_ticketType" Type="InArgument(x:String)" />
    <x:Property Name="in_ticketGroupId" Type="InArgument(x:String)" />
    <x:Property Name="in_ticketSubject" Type="InArgument(x:String)" />
    <x:Property Name="in_ticketClient" Type="InArgument(x:String)" />
    <x:Property Name="in_ticketProcessName" Type="InArgument(x:String)" />
    <x:Property Name="in_ticketOrchestratorName" Type="InArgument(x:String)" />
    <x:Property Name="in_ticketMailCreatedBy" Type="InArgument(x:String)" />
    <x:Property Name="in_ticketUsernameApi" Type="InArgument(x:String)" />
    <x:Property Name="in_ticketPasswordApi" Type="InArgument(ss:SecureString)" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1634,5153.333333333333</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>SendReportMicrosoftOffice365_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Security</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>UiPath.Web</x:String>
      <x:String>UiPath.Web.Activities</x:String>
      <x:String>UiPath.Activities.System.Encode</x:String>
      <x:String>UiPath.Activities.System.Compression.Zip</x:String>
      <x:String>UiPath.Activities.System.Compression.Workflow</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>System.Activities.Runtime.Collections</x:String>
      <x:String>System.Text</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Core</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Forms</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.CodeDom</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.MicrosoftOffice365.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.ViewModels</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.Web</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>System.Text.Encoding.CodePages</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.Watcher</AssemblyReference>
      <AssemblyReference>System.IO.Packaging</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.AccessControl</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.DriveInfo</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="SendReportTicketSam" sap:VirtualizedContainerService.HintSize="714.6666666666666,5088.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="strRequestAttachmentPath" />
      <Variable x:TypeArguments="x:String" Name="strTagSubject" />
      <Variable x:TypeArguments="x:String" Name="responseContent" />
      <Variable x:TypeArguments="x:Int32" Name="statusCode" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log message - open automatic ticket in SAM" sap:VirtualizedContainerService.HintSize="652.6666666666666,144.66666666666666" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;#################Getting ready to open automatic ticket in SAM...#################&quot;]" />
    <InvokeMethod DisplayName="Invoke method set a encoding provider" sap:VirtualizedContainerService.HintSize="652.6666666666666,138.66666666666666" sap2010:WorkflowViewState.IdRef="InvokeMethod_1" MethodName="RegisterProvider" TargetType="st:Encoding">
      <InArgument x:TypeArguments="st:EncodingProvider">[System.Text.CodePagesEncodingProvider.Instance]</InArgument>
    </InvokeMethod>
    <Assign sap2010:Annotation.AnnotationText="Getting client name with only the first letter capitalized" DisplayName="Assign - in_ticketClient" sap:VirtualizedContainerService.HintSize="652.6666666666666,116" sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[in_ticketClient]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[StrConv(in_ticketClient.ToLower, VbStrConv.ProperCase)]</InArgument>
      </Assign.Value>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </Assign>
    <Assign DisplayName="Assign-strTagSubject" sap:VirtualizedContainerService.HintSize="652.6666666666666,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_2">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[strTagSubject]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[String.Format("[AUTO][{0}][{1}]{2}",in_ticketClient,in_ticketOrchestratorName,in_ticketSubject)]</InArgument>
      </Assign.Value>
    </Assign>
    <Sequence DisplayName="Analyze attachments to put on ticket" sap:VirtualizedContainerService.HintSize="652.6666666666666,3518.6666666666665" sap2010:WorkflowViewState.IdRef="Sequence_10">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If Condition="[Not String.IsNullOrEmpty(in_attachmentsPaths)]" DisplayName="If - Have at least an attachment" sap:VirtualizedContainerService.HintSize="590.6666666666666,3408" sap2010:WorkflowViewState.IdRef="If_5">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If.Then>
          <Sequence DisplayName="Prepare files to be attached" sap:VirtualizedContainerService.HintSize="556.6666666666666,3224" sap2010:WorkflowViewState.IdRef="Sequence_3">
            <Sequence.Variables>
              <Variable x:TypeArguments="s:String[]" Name="arrAttachmentPaths" />
              <Variable x:TypeArguments="x:String" Name="samTicketAttachmentsFolderPath" />
              <Variable x:TypeArguments="si:FileInfo" Name="zippedFile" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign sap2010:Annotation.AnnotationText="Path.Combine(Directory.GetCurrentDirectory,&quot;SAM_Ticket_Attachments&quot;)" DisplayName="Assign - samTicketAttachmentsFolderPath" sap:VirtualizedContainerService.HintSize="514.6666666666666,116" sap2010:WorkflowViewState.IdRef="Assign_5">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[samTicketAttachmentsFolderPath]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[Path.Combine(Directory.GetCurrentDirectory,"SAM_Ticket_Attachments")]</InArgument>
              </Assign.Value>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </Assign>
            <If Condition="[Directory.Exists(samTicketAttachmentsFolderPath)]" DisplayName="If - Folder SAM_Ticket_Attachments exists, delete it" sap:VirtualizedContainerService.HintSize="514.6666666666666,538" sap2010:WorkflowViewState.IdRef="If_2">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <Sequence DisplayName="Delete folder of attachments" sap:VirtualizedContainerService.HintSize="376,354" sap2010:WorkflowViewState.IdRef="Sequence_5">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:LogMessage DisplayName="Log message - deleting attachments folders" sap:VirtualizedContainerService.HintSize="334,144.66666666666666" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[String.Format(&quot;Deleting attachments folder {0} ...&quot;,samTicketAttachmentsFolderPath)]" />
                  <ui:DeleteFolderX DisplayName="Delete Folder - SAM_Ticket_Attachments" sap:VirtualizedContainerService.HintSize="334,82" sap2010:WorkflowViewState.IdRef="DeleteFolderX_1" Path="[samTicketAttachmentsFolderPath]" Recursive="True" />
                </Sequence>
              </If.Then>
              <If.Else>
                <Sequence DisplayName="" sap:VirtualizedContainerService.HintSize="300,81.33333333333333" sap2010:WorkflowViewState.IdRef="Sequence_13">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </Sequence>
              </If.Else>
            </If>
            <Delay DisplayName="Delay - 2s" Duration="00:00:02" sap:VirtualizedContainerService.HintSize="514.6666666666666,92" sap2010:WorkflowViewState.IdRef="Delay_1" />
            <ui:LogMessage DisplayName="Log Message - create folder samTicketAttachmentsFolder" sap:VirtualizedContainerService.HintSize="514.6666666666666,144.66666666666666" sap2010:WorkflowViewState.IdRef="LogMessage_12" Level="Info" Message="[String.Format(&quot;Create folder {0}.&quot;,samTicketAttachmentsFolderPath)]" />
            <ui:CreateDirectory ContinueOnError="{x:Null}" Output="{x:Null}" DisplayName="Create Folder - samTicketAttachmentsFolderPath " sap:VirtualizedContainerService.HintSize="514.6666666666666,82" sap2010:WorkflowViewState.IdRef="CreateDirectory_1" Path="[samTicketAttachmentsFolderPath]" />
            <Assign DisplayName="Assign - arrAttachmentPaths" sap:VirtualizedContainerService.HintSize="514.6666666666666,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_4">
              <Assign.To>
                <OutArgument x:TypeArguments="s:String[]">[arrAttachmentPaths]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="s:String[]">[split(in_attachmentsPaths.Replace(" ;", ";").Replace("; ", ";"), ";"c)]</InArgument>
              </Assign.Value>
            </Assign>
            <ui:LogMessage DisplayName="Log message - files quantity" sap:VirtualizedContainerService.HintSize="514.6666666666666,144.66666666666666" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[String.Format(&quot;Have {0} files to attach. Packing it...&quot;, arrAttachmentPaths.Length)]" />
            <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each attachment path" sap:VirtualizedContainerService.HintSize="514.6666666666666,860.6666666666666" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[arrAttachmentPaths]">
              <ui:ForEach.Body>
                <ActivityAction x:TypeArguments="x:String">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="x:String" Name="attachmentPath" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Check if file really exists before sending to folder to be zipped" sap:VirtualizedContainerService.HintSize="480.6666666666667,670.6666666666666" sap2010:WorkflowViewState.IdRef="Sequence_4">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:LogMessage DisplayName="Log Message - copy file attachment" sap:VirtualizedContainerService.HintSize="438.6666666666667,144.66666666666666" sap2010:WorkflowViewState.IdRef="LogMessage_13" Level="Info" Message="[String.Format(&quot;Copy file from {0} to {1}.&quot;,attachmentPath,Path.Combine(samTicketAttachmentsFolderPath,Path.GetFileName(attachmentPath)))]" />
                    <TryCatch DisplayName="T/C - Copy file to folder" sap:VirtualizedContainerService.HintSize="438.6666666666667,398.6666666666667" sap2010:WorkflowViewState.IdRef="TryCatch_1">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <TryCatch.Try>
                        <ui:CopyFile ContinueOnError="{x:Null}" Destination="[Path.Combine(samTicketAttachmentsFolderPath, Path.GetFileName(attachmentPath))]" DisplayName="Copy File to SAM Ticket Attachments Folder" sap:VirtualizedContainerService.HintSize="334,159.33333333333334" sap2010:WorkflowViewState.IdRef="CopyFile_1" Overwrite="True" Path="[attachmentPath]" />
                      </TryCatch.Try>
                      <TryCatch.Catches>
                        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404.6666666666667,22" sap2010:WorkflowViewState.IdRef="Catch`1_1">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ActivityAction x:TypeArguments="s:Exception">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                            </ActivityAction.Argument>
                            <ui:LogMessage DisplayName="Log message - failed to copy file" sap:VirtualizedContainerService.HintSize="334,144.66666666666666" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Warn" Message="[String.Format(&quot;Failed copying file {0} to SAM Attachments Folder. It will not be attached to the ticket.&quot;, exception.Message)]" />
                          </ActivityAction>
                        </Catch>
                      </TryCatch.Catches>
                    </TryCatch>
                  </Sequence>
                </ActivityAction>
              </ui:ForEach.Body>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:ForEach>
            <If Condition="[Directory.GetFiles(samTicketAttachmentsFolderPath).Length&gt;1]" DisplayName="If - There is more then one file" sap:VirtualizedContainerService.HintSize="514.6666666666666,753.3333333333334" sap2010:WorkflowViewState.IdRef="If_4">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <Sequence DisplayName="Zip files" sap:VirtualizedContainerService.HintSize="476,569.3333333333334" sap2010:WorkflowViewState.IdRef="Sequence_6">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign DisplayName="Assign - strRequestAttachmentPath" sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_6">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[strRequestAttachmentPath]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[samTicketAttachmentsFolderPath+".zip"]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <uascw:CompressFiles CompressedResource="{x:Null}" Password="{x:Null}" ResourcesToArchive="{x:Null}" SecurePassword="{x:Null}" CodePage="Default" CompressedFileInfo="[zippedFile]" CompressedFileName="[samTicketAttachmentsFolderPath+&quot;.zip&quot;]" CompressionLevel="Normal" DisplayName="Compress/Zip Files - attachment for the ticket" EncryptionAlgorithm="Classic" sap:VirtualizedContainerService.HintSize="434,220.66666666666666" sap2010:WorkflowViewState.IdRef="CompressFiles_1" OverrideExistingFile="True">
                    <uascw:CompressFiles.ContentToArchive>
                      <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4">
                        <InArgument x:TypeArguments="x:String">[samTicketAttachmentsFolderPath]</InArgument>
                      </scg:List>
                    </uascw:CompressFiles.ContentToArchive>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </uascw:CompressFiles>
                  <ui:LogMessage DisplayName="Log message - finished zip file" sap:VirtualizedContainerService.HintSize="434,96" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Info" Message="[String.Format(&quot;Files has been zipped. Total Size: {0} KBs&quot;, zippedFile.SizeInKB.ToString)]" />
                </Sequence>
              </If.Then>
              <If.Else>
                <Sequence DisplayName="Check if there is at least one file in the folder" sap:VirtualizedContainerService.HintSize="510,356.6666666666667" sap2010:WorkflowViewState.IdRef="Sequence_8">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If Condition="[Directory.GetFiles(samTicketAttachmentsFolderPath).Length=1]" DisplayName="If - Have one file" sap:VirtualizedContainerService.HintSize="468,269.3333333333333" sap2010:WorkflowViewState.IdRef="If_3">
                    <If.Then>
                      <Assign DisplayName="Assign - requestAttachmentPath" sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_7">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[strRequestAttachmentPath]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[Directory.GetFiles(samTicketAttachmentsFolderPath)(0)]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </If.Then>
                    <If.Else>
                      <Sequence DisplayName="Report" sap:VirtualizedContainerService.HintSize="476,308.6666666666667" sap2010:WorkflowViewState.IdRef="Sequence_7">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:LogMessage DisplayName="Log message - no files" sap:VirtualizedContainerService.HintSize="434,96" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Warn" Message="[&quot;There is no file in SAM Attachments Folder after trying to copy it&quot;]" />
                        <Assign DisplayName="Assign - requestAttachmentPath" sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_8">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[strRequestAttachmentPath]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[Nothing]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </Sequence>
                    </If.Else>
                  </If>
                </Sequence>
              </If.Else>
            </If>
          </Sequence>
        </If.Then>
        <If.Else>
          <Sequence DisplayName="Do not attach files" sap:VirtualizedContainerService.HintSize="376,183.33333333333334" sap2010:WorkflowViewState.IdRef="Sequence_9">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:LogMessage DisplayName="Log Message - No attachments" sap:VirtualizedContainerService.HintSize="334,96" sap2010:WorkflowViewState.IdRef="LogMessage_7" Level="Info" Message="[&quot;No attachments should be included in the ticket.&quot;]" />
          </Sequence>
        </If.Else>
      </If>
    </Sequence>
    <ui:LogMessage DisplayName="Log message - sending request to create ticket" sap:VirtualizedContainerService.HintSize="652.6666666666666,96" sap2010:WorkflowViewState.IdRef="LogMessage_11" Level="Info" Message="[&quot;Sending request to create ticket.&quot;]" />
    <If Condition="[String.IsNullOrEmpty(strRequestAttachmentPath)]" DisplayName="If strRequestAttachmentPath - is null or empty" sap:VirtualizedContainerService.HintSize="652.6666666666666,502.6666666666667" sap2010:WorkflowViewState.IdRef="If_6">
      <If.Then>
        <Sequence sap:VirtualizedContainerService.HintSize="300,159.33333333333334" sap2010:WorkflowViewState.IdRef="Sequence_16">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:HttpClient Body="{x:Null}" ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ContinueOnError="{x:Null}" FileAttachments="{x:Null}" OAuth1Token="{x:Null}" OAuth1TokenSecret="{x:Null}" OAuth2Token="{x:Null}" Password="{x:Null}" ResourcePath="{x:Null}" ResponseAttachment="{x:Null}" ResponseHeaders="{x:Null}" SecureClientCertificatePassword="{x:Null}" AcceptFormat="JSON" AuthenticationType="None" BodyFormat="multipart/form-data" ClientCertificate="[Nothing]" ClientCertificatePassword="[Nothing]" DisplayName="HTTP Request - create ticket without attachments" EnableSSLVerification="True" EndPoint="https://smarthis-help.freshdesk.com/api/v2/tickets" sap:VirtualizedContainerService.HintSize="258,72" sap2010:WorkflowViewState.IdRef="HttpClient_1" Method="POST" Result="[responseContent]" SecurePassword="[in_ticketPasswordApi]" StatusCode="[statusCode]" TimeoutMS="12000" Username="[in_ticketUsernameApi]">
            <ui:HttpClient.Attachments>
              <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
            </ui:HttpClient.Attachments>
            <ui:HttpClient.Cookies>
              <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
            </ui:HttpClient.Cookies>
            <ui:HttpClient.Headers>
              <InArgument x:TypeArguments="x:String" x:Key="content-type">multipart/form-data</InArgument>
            </ui:HttpClient.Headers>
            <ui:HttpClient.Parameters>
              <InArgument x:TypeArguments="x:String" x:Key="email">[in_ticketMailCreatedBy]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="subject">[strTagSubject]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="description">[in_ticketDescription]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="status">[in_ticketStatus]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="custom_fields[cf_nome_do_processo]">[in_ticketProcessName]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="custom_fields[cf_orquestrador]">[in_ticketOrchestratorName]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="custom_fields[cf_empresa73157]">[in_ticketClient]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="priority">[in_ticketPriority]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="type">[in_ticketType]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="group_id">[in_ticketGroupId]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="responder_id">[in_ticketResponderId]</InArgument>
            </ui:HttpClient.Parameters>
            <ui:HttpClient.UrlSegments>
              <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
            </ui:HttpClient.UrlSegments>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:HttpClient>
        </Sequence>
      </If.Then>
      <If.Else>
        <Sequence sap:VirtualizedContainerService.HintSize="300,159.33333333333334" sap2010:WorkflowViewState.IdRef="Sequence_17">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:HttpClient Body="{x:Null}" ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ContinueOnError="{x:Null}" FileAttachments="{x:Null}" OAuth1Token="{x:Null}" OAuth1TokenSecret="{x:Null}" OAuth2Token="{x:Null}" Password="{x:Null}" ResourcePath="{x:Null}" ResponseAttachment="{x:Null}" ResponseHeaders="{x:Null}" SecureClientCertificatePassword="{x:Null}" AcceptFormat="JSON" AuthenticationType="None" BodyFormat="multipart/form-data" ClientCertificate="[Nothing]" ClientCertificatePassword="[Nothing]" DisplayName="HTTP Request - create ticket with attachments" EnableSSLVerification="True" EndPoint="https://smarthis-help.freshdesk.com/api/v2/tickets" sap:VirtualizedContainerService.HintSize="258,72" sap2010:WorkflowViewState.IdRef="HttpClient_2" Method="POST" Result="[responseContent]" SecurePassword="[in_ticketPasswordApi]" StatusCode="[statusCode]" TimeoutMS="12000" Username="[in_ticketUsernameApi]">
            <ui:HttpClient.Attachments>
              <InArgument x:TypeArguments="x:String" x:Key="attachments[]">[strRequestAttachmentPath]</InArgument>
            </ui:HttpClient.Attachments>
            <ui:HttpClient.Cookies>
              <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
            </ui:HttpClient.Cookies>
            <ui:HttpClient.Headers>
              <InArgument x:TypeArguments="x:String" x:Key="content-type">multipart/form-data</InArgument>
            </ui:HttpClient.Headers>
            <ui:HttpClient.Parameters>
              <InArgument x:TypeArguments="x:String" x:Key="email">[in_ticketMailCreatedBy]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="subject">[strTagSubject]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="description">[in_ticketDescription]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="status">[in_ticketStatus]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="custom_fields[cf_nome_do_processo]">[in_ticketProcessName]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="custom_fields[cf_orquestrador]">[in_ticketOrchestratorName]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="custom_fields[cf_empresa73157]">[in_ticketClient]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="priority">[in_ticketPriority]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="type">[in_ticketType]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="group_id">[in_ticketGroupId]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="responder_id">[in_ticketResponderId]</InArgument>
            </ui:HttpClient.Parameters>
            <ui:HttpClient.UrlSegments>
              <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
            </ui:HttpClient.UrlSegments>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:HttpClient>
        </Sequence>
      </If.Else>
    </If>
    <ui:LogMessage DisplayName="Log message - request status and content" sap:VirtualizedContainerService.HintSize="652.6666666666666,96" sap2010:WorkflowViewState.IdRef="LogMessage_10" Level="Info" Message="[String.Format(&quot;Request Status: {0}&quot;+vbCrLf+&quot;Response content: {1}&quot;+vbCrLf+&quot;###################################################&quot;,statusCode.ToString,responseContent)]" />
  </Sequence>
</Activity>